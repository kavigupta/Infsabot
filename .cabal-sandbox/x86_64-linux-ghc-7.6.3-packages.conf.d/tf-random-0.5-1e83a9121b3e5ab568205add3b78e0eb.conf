name: tf-random
version: 0.5
id: tf-random-0.5-1e83a9121b3e5ab568205add3b78e0eb
license: BSD3
copyright:
maintainer: Michał Pałka <michal.palka@chalmers.se>
stability:
homepage:
package-url:
synopsis: High-quality splittable pseudorandom number generator
description: This package contains an implementation of a high-quality splittable pseudorandom number generator. The generator is based on a cryptographic hash function built on top of the ThreeFish block cipher. See the paper /Splittable Pseudorandom Number Generators Using Cryptographic Hashing/ by Claessen, Pałka for details and the rationale of the design.
             .
             The package provides the following:
             .
             * A splittable PRNG that implements the standard 'System.Random.RandomGen' class.
             .
             * The generator also implements an alternative version of the 'System.Random.TF.Gen.RandomGen' class (exported from "System.Random.TF.Gen"), which requires the generator to return pseudorandom integers from the full 32-bit range, and contains an n-way split function.
             .
             * An alternative version of the @Random@ class is provided, which is linked to the new @RandomGen@ class, together with @Random@ instances for some integral types.
             .
             * Two functions for initialising the generator with a non-deterministic seed: one using the system time, and one using the @\/dev\/urandom@ UNIX special file.
             .
             The package uses an adapted version of the reference C implementation of ThreeFish from the reference package of the Skein hash function (<https://www.schneier.com/skein.html>), originally written by Doug Whiting.
             .
             Please note that even though the generator provides very high-quality pseudorandom numbers, it has not been designed with cryptographic applications in mind.
category: Random
author: Michał Pałka <michal.palka@chalmers.se>
exposed: True
exposed-modules: System.Random.TF System.Random.TF.Gen
                 System.Random.TF.Init System.Random.TF.Instances
hidden-modules:
trusted: False
import-dirs: /home/kavi/Dropbox/workspaces/Haskell/Infsabot/.cabal-sandbox/lib/x86_64-linux-ghc-7.6.3/tf-random-0.5
library-dirs: /home/kavi/Dropbox/workspaces/Haskell/Infsabot/.cabal-sandbox/lib/x86_64-linux-ghc-7.6.3/tf-random-0.5
hs-libraries: HStf-random-0.5
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.6.0.1-8aa5d403c45ea59dcd2c39f123e27d57
         primitive-0.6.1.0-3971ebed0d6abb798888b3c70b8172ab
         random-1.1-6f1f4851e66db7096e1eb971c28cc5e8
         time-1.4.0.1-10dc4804a19dc0000fab79908f1a9f50
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /home/kavi/Dropbox/workspaces/Haskell/Infsabot/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.6.3/tf-random-0.5/html/tf-random.haddock
haddock-html: /home/kavi/Dropbox/workspaces/Haskell/Infsabot/.cabal-sandbox/share/doc/x86_64-linux-ghc-7.6.3/tf-random-0.5/html
