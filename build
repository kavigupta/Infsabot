#!/bin/bash
demo_board_size="100"

stdlog="___std.log"
errlog="___err.log"
errcolor="\e[0;31m"
logcolor="\e[0;32m"
succolor="\e[1;36m"
norcolor="\033[0m"

function echl {
    echo -e "$logcolor$1$norcolor"
}
function echs {
    echo -e "$succolor$1$norcolor"
}
function echf {
    echo -e "$errcolor$1$norcolor"
}

function perror_clean {
    echo -e "$errcolor"
    cat $errlog
    echo -e "$norcolor"
    exit 1
}

function runInterpreter {
    ghci "$1" -XTupleSections -Wall -Werror
}

for f in ./Infsabot/*.hs
do
    echl "Compiling $f"
    runInterpreter "$f" <<EOD >> $stdlog 2> $errlog
EOD
    errsize=$(wc -c <"$errlog")

    if [ "$errsize" != "0" ]; then
        echf "Haskell Files did not build correctly"
        perror_clean
    fi
done

echs "All Haskell Files Built"

runInterpreter "Infsabot/Board.hs" <<EOD >> $stdlog 2> $errlog

writePng "./demo-starting-board.png" $ renderBoard $ startingBoard $demo_board_size
EOD

errsize=$(wc -c <"$errlog")

if [ "$errsize" = "0" ] ; then
    echs "Image produced"
else
    echf "Image was not correctly produced"
    perror_clean
fi

rm ./Infsabot/*hi 2>> /dev/null
rm ./Infsabot/*.o 2>> /dev/null
rm "$errlog"
rm "$stdlog"

if [ $# -eq 1 ]; then
    git add .
    git commit -m "$1"
fi
