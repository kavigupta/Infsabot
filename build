#!/bin/bash
demo_board_size="100"

mkdir "gen" 2> /dev/null

stdlog="gen/___std.log"
errlog="gen/___err.log"
errcolor="\e[0;31m"
logcolor="\e[0;32m"
succolor="\e[1;36m"
norcolor="\033[0m"

n=1
perform_commit=false
keep_log=false
while [ "$n" -le "$#" ]; do
    echo "$n"
    if [ "${!n}" == "-commit" ]; then
        perform_commit=true
        n=$((n+1))
        echo "${!n}"
        commit_msg=${!n}
    elif [ "${!n}" == "-keeplog" ]; then
        keep_log=true
    elif [ "${!n}" == "-clean" ]; then
        echo "CLEANING"
        find . -name '___*' -delete
        exit 0
    else
        echo "Unrecognized command $@{!n}"
    fi
    n=$((n+1))
done


function echl {
    echo -e "$logcolor$1$norcolor"
}
function echs {
    echo -e "$succolor$1$norcolor"
}
function echf {
    echo -e "$errcolor$1$norcolor"
}

function perror_clean {
    echo -e "$errcolor"
    cat $errlog
    echo -e "$norcolor"
    exit 1
}

function report_sorf {
    errsize=$(wc -$3 <"$errlog")
    if [ "$errsize" != "0" ]; then
        echf "$2"
        perror_clean
    else
        if [ -n "$1" ]; then
            echs "$1"
        fi
    fi
}

function runInterpreter {
    ghci "$1" -Wall -Werror
}

for f in ./Infsabot/*.hs
do
    echl "Compiling $f"
    runInterpreter "$f" <<EOD >> $stdlog 2> $errlog
EOD
    report_sorf "" "Haskell Files did not build correctly" "c"
done

echs "Haskell Files Built Correctly."

runInterpreter "Infsabot/Main.hs" <<EOD >> $stdlog 2> $errlog
runTestTT tests >>= \_ -> return ()
EOD

report_sorf "All Tests Succeeded" "Tests Failed" "l"

runInterpreter "Infsabot/Main.hs" <<EOD >> $stdlog 2> $errlog
createDemoBoards $demo_board_size
EOD

report_sorf "Image produced" "Image was not correctly produced" "c"

rm ./Infsabot/*hi 2>> /dev/null
rm ./Infsabot/*.o 2>> /dev/null

if [ "$keep_log" == false ]; then
    rm "$errlog"
    rm "$stdlog"
fi

if [ "$perform_commit" == true ]; then
    echo -e "$logcolor"
    git add .
    git commit -m "$commit_msg"
    echo -e "$norcolor"
    echs "Changes Committed"
fi
